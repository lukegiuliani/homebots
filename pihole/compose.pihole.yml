version: '3.7'
services:
  cloudflared:
    image: visibilityspots/cloudflared
    container_name: cloudflared
    ports:
      - "5054:5054/tcp"
      - "5054:5054/udp"
    environment:
      - TZ=${PIHOLE_TIMEZONE}
      - PORT=5054
      - ADDRESS=0.0.0.0
    restart: always
    networks:
      dns-net:
        ipv4_address: 172.20.0.2

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      # - "8888:80/tcp"
      # - "8443:443/tcp"
    environment:
      - TZ=${PIHOLE_TIMEZONE}
      - PIHOLE_DNS_=172.20.0.2#5054;1.1.1.1 # referencing by name results in "Invalid IP detected in PIHOLE_DNS_: cloudflared#5054"
      - WEBPASSWORD=${PIHOLE_PW}
      - REV_SERVER=true
      - REV_SERVER_TARGET=${PIHOLE_ROUTER_IP}
      - REV_SERVER_DOMAIN=${PIHOLE_NETWORK_DOMAIN}
      - REV_SERVER_CIDR=${PIHOLE_REVERSE_DNS}
      # - FTLCONF_LOCAL_IPV4=${HOST_IPV4}
      # - FTLCONF_LOCAL_IPV6=${HOST_IPV6}
    dns:
      - 127.0.0.1 # "Sets your container's resolve settings to localhost so it can resolve DHCP hostnames [...]" - github.com/pi-hole/docker-pi-hole
      - 1.1.1.1 # Backup server
    # I'm just including an opinionated set here. It's my setup :D
    extra_hosts:
      - "pihole.${HOSTNAME}:${HOST_IPV4}"

    volumes: # store your data between container upgrades
      - "/etc/pihole/:/etc/pihole/"
      - "/etc/dnsmasq.d/:/etc/dnsmasq.d/"
    # cap_add:
    #   - NET_ADMIN # Recommended but not required (DHCP needs NET_ADMIN) https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    depends_on:
      - "cloudflared"
    restart: always
    networks:
      - dns-net
      - traefik-net # so we can route to the web portal

    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=homebots_traefik-net"
      - "traefik.http.routers.pihole.rule=Host(`pihole.${HOSTNAME}`)"
      - "traefik.http.routers.pihole.entrypoints=websecure"
      - "traefik.http.routers.pihole.tls=true"
      - "traefik.http.services.pihole.loadbalancer.server.port=80"

      # - "traefik.http.routers.pihole.middlewares=pihole-admin"
      # - "traefik.http.middlewares.pihole-admin.addprefix.prefix='/admin'"

  pihole-exporter:
    container_name: pihole-exporter
    image: ekofr/pihole-exporter:latest
    restart: unless-stopped
    hostname: 'pihole-exporter'
    ports:
      - "9617:9617"
    environment:
      - PIHOLE_HOSTNAME=pihole
      - PIHOLE_PASSWORD=${PIHOLE_PW}
      - INTERVAL=30s
      - PORT=9617
    networks:
      - dns-net # so it can talk to pi hole
      - prometheus-net # so prometheus can talk to it. 

networks:
  dns-net:
    ipam:
      config:
        - subnet: 172.20.0.0/24